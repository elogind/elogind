<?xml version='1.0'?> <!--*- Mode: nxml; nxml-child-indent: 2; indent-tabs-mode: nil -*-->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<!--
  SPDX-License-Identifier: LGPL-2.1+

  This file is part of systemd.

  Copyright 2014 Zbigniew Jędrzejewski-Szmek
-->

<refentry id="sd_bus_new">

  <refentryinfo>
    <title>sd_bus_new</title>
    <productname>systemd</productname>

    <authorgroup>
      <author>
        <contrib>A monkey with a typewriter</contrib>
        <firstname>Zbigniew</firstname>
        <surname>Jędrzejewski-Szmek</surname>
        <email>zbyszek@in.waw.pl</email>
      </author>
    </authorgroup>
  </refentryinfo>

  <refmeta>
    <refentrytitle>sd_bus_new</refentrytitle>
    <manvolnum>3</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>sd_bus_new</refname>
    <refname>sd_bus_ref</refname>
    <refname>sd_bus_unref</refname>
    <refname>sd_bus_unrefp</refname>

    <refpurpose>Create a new bus object and create or destroy references to it</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;systemd/sd-bus.h&gt;</funcsynopsisinfo>

      <funcprototype>
        <funcdef>int <function>sd_bus_new</function></funcdef>
        <paramdef>sd_bus **<parameter>bus</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sd_bus *<function>sd_bus_ref</function></funcdef>
        <paramdef>sd_bus *<parameter>bus</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sd_bus *<function>sd_bus_unref</function></funcdef>
        <paramdef>sd_bus *<parameter>bus</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>void <function>sd_bus_unrefp</function></funcdef>
        <paramdef>sd_bus **<parameter>bus</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para><function>sd_bus_new()</function> creates a new bus
    object. This object is reference-counted, and will be destroyed
    when all references are gone. Initially, the caller of this
    function owns the sole reference and the bus object will not be
    connected to any bus. To connect it to a bus, make sure
    to set an address with
    <citerefentry><refentrytitle>sd_bus_set_address</refentrytitle><manvolnum>3</manvolnum></citerefentry>
    or a related call, and then start the connection with
    <citerefentry><refentrytitle>sd_bus_start</refentrytitle><manvolnum>3</manvolnum></citerefentry>.</para>

    <para>In most cases, it is a better idea to invoke
    <citerefentry><refentrytitle>sd_bus_default_user</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
    <citerefentry><refentrytitle>sd_bus_default_system</refentrytitle><manvolnum>3</manvolnum></citerefentry>
    or related calls instead of the more low-level
    <function>sd_bus_new()</function> and
    <function>sd_bus_start()</function>. The higher-level calls not
    only allocate a bus object but also start the connection to a
    well-known bus in a single function invocation.</para>

    <para><function>sd_bus_ref()</function> increases the reference
    counter of <parameter>bus</parameter> by one.</para>

    <para><function>sd_bus_unref()</function> decreases the reference
    counter of <parameter>bus</parameter> by one. Once the reference
    count has dropped to zero, <parameter>bus</parameter> is destroyed
    and cannot be used anymore, so further calls to
    <function>sd_bus_ref()</function> or
    <function>sd_bus_unref()</function> are illegal.</para>

    <para><function>sd_bus_unrefp()</function> is similar to
    <function>sd_bus_unref()</function> but takes a pointer to a
    pointer to an <type>sd_bus</type> object. This call is useful in
    conjunction with GCC's and LLVM's <ulink
    url="https://gcc.gnu.org/onlinedocs/gcc/Common-Variable-Attributes.html">Clean-up
    Variable Attribute</ulink>. Note that this function is defined as
    inline function. Use a declaration like the following, in order to
    allocate a bus object that is freed automatically as the code
    block is left:</para>

    <programlisting>{
        __attribute__((cleanup(sd_bus_unrefp)) sd_bus *bus = NULL;
        int r;
        …
        r = sd_bus_default(&amp;bus);
        if (r &lt; 0)
                fprintf(stderr, "Failed to allocate bus: %s\n", strerror(-r));
        …
}</programlisting>

    <para><function>sd_bus_ref()</function>,
    <function>sd_bus_unref()</function> and
    <function>sd_bus_unrefp()</function> execute no operation if the
    passed in bus object is <constant>NULL</constant>.</para>
  </refsect1>

  <refsect1>
    <title>Return Value</title>

    <para>On success, <function>sd_bus_new()</function> returns 0 or a
    positive integer. On failure, it returns a negative errno-style
    error code.</para>

    <para><function>sd_bus_ref()</function> always returns the argument.
    </para>

    <para><function>sd_bus_unref()</function> always returns
    <constant>NULL</constant>.</para>
  </refsect1>

  <refsect1>
    <title>Errors</title>

    <para>Returned errors may indicate the following problems:</para>

    <variablelist>
      <varlistentry>
        <term><constant>-ENOMEM</constant></term>

        <listitem><para>Memory allocation failed.</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Notes</title>

    <para><function>sd_bus_new()</function> and other functions
    described here are available as a shared library, which can be
    compiled and linked to with the
    <constant>libelogind</constant> <citerefentry project='die-net'><refentrytitle>pkg-config</refentrytitle><manvolnum>1</manvolnum></citerefentry>
    file.</para>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd-bus</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_default_user</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_default_system</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_open_user</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_open_system</refentrytitle><manvolnum>3</manvolnum></citerefentry>
    </para>
  </refsect1>

</refentry>
