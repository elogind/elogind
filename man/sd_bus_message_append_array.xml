<?xml version='1.0'?> <!--*- Mode: nxml; nxml-child-indent: 2; indent-tabs-mode: nil -*-->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<!--
  SPDX-License-Identifier: LGPL-2.1+
-->

<refentry id="sd_bus_message_append_array"
          xmlns:xi="http://www.w3.org/2001/XInclude">

  <refentryinfo>
    <title>sd_bus_message_append_array</title>
    <productname>systemd</productname>

    <authorgroup>
      <author>
        <contrib>A monkey with a typewriter</contrib>
        <firstname>Zbigniew</firstname>
        <surname>JÄ™drzejewski-Szmek</surname>
        <email>zbyszek@in.waw.pl</email>
      </author>
    </authorgroup>
  </refentryinfo>

  <refmeta>
    <refentrytitle>sd_bus_message_append_array</refentrytitle>
    <manvolnum>3</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>sd_bus_message_append_array</refname>
    <refname>sd_bus_message_append_array_memfd</refname>
    <refname>sd_bus_message_append_array_iovec</refname>
    <refname>sd_bus_message_append_array_space</refname>

    <refpurpose>Append an array of fields to a D-Bus
    message</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;systemd/sd-bus.h&gt;</funcsynopsisinfo>

      <funcprototype>
        <funcdef>int sd_bus_message_append_array</funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>char <parameter>type</parameter></paramdef>
        <paramdef>char void *<parameter>ptr</parameter></paramdef>
        <paramdef>size_t <parameter>size</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int sd_bus_message_append_array_memfd</funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>char <parameter>type</parameter></paramdef>
        <paramdef>int <parameter>memfd</parameter></paramdef>
        <paramdef>uint64_t <parameter>offset</parameter></paramdef>
        <paramdef>uint64_t <parameter>size</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int sd_bus_message_append_array_iovec</funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>char <parameter>type</parameter></paramdef>
        <paramdef>const struct iovec *<parameter>iov</parameter></paramdef>
        <paramdef>unsigned <parameter>n</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int sd_bus_message_append_array_space</funcdef>
        <paramdef>char <parameter>type</parameter></paramdef>
        <paramdef>size_t <parameter>size</parameter></paramdef>
        <paramdef>void **<parameter>ptr</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para>The <function>sd_bus_message_append_array()</function>
    function appends an array to a D-Bus message
    <parameter>m</parameter>. A container will be opened, the array
    contents appended, and the container closed. The parameter
    <parameter>type</parameter> determines how the pointer
    <parameter>p</parameter> is interpreted.
    <parameter>type</parameter> must be one of the "trivial" types
    <literal>y</literal>, <literal>n</literal>, <literal>q</literal>,
    <literal>i</literal>, <literal>u</literal>, <literal>x</literal>,
    <literal>t</literal>, <literal>d</literal> (but not
    <literal>b</literal>), as defined by the <ulink
    url="http://dbus.freedesktop.org/doc/dbus-specification.html#basic-types">Basic
    Types</ulink> section of the D-Bus specification, and listed in
    <citerefentry><refentrytitle>sd_bus_message_append_basic</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
    Pointer <parameter>p</parameter> must point to an array of size
    <parameter>size</parameter> bytes containing items of the
    respective type. Size <parameter>size</parameter> must be a
    multiple of the size of the type <parameter>type</parameter>. As a
    special case, <parameter>p</parameter> may be
    <constant>NULL</constant>, if <parameter>size</parameter> is 0.
    The memory pointed to by <parameter>p</parameter> is copied into
    the memory area containing the message and stays in possession of
    the caller. The caller may hence freely change the data after this
    call without affecting the message the array was appended
    to.</para>

    <para>The <function>sd_bus_message_append_array_memfd()</function>
    function appends an array of a trivial type to message
    <parameter>m</parameter>, similar to
    <function>sd_bus_message_append_array()</function>. The contents
    of the memory file descriptor <parameter>memfd</parameter>
    starting at the specified offset and of the specified size is
    used as the contents of the array. The offset and size must be a
    multiple of the size of the type
    <parameter>type</parameter>. However, as a special exception, if
    the offset is specified as zero and the size specified as
    UINT64_MAX the full memory file descriptor contents is used. The
    memory file descriptor is sealed by this call if it has not been
    sealed yet, and cannot be modified after this call. See
    <citerefentry
    project='man-pages'><refentrytitle>memfd_create</refentrytitle><manvolnum>2</manvolnum></citerefentry>
    for details about memory file descriptors. Appending arrays with
    memory file descriptors enables efficient zero-copy data transfer,
    as the memory file descriptor may be passed as-is to the
    destination, without copying the memory in it to the destination
    process. Not all protocol transports support passing memory file
    descriptors between participants, in which case this call will
    automatically fall back to copying. Also, as memory file
    descriptor passing is inefficient for smaller amounts of data,
    copying might still be enforced even where memory file descriptor
    passing is supported.</para>

    <para>The <function>sd_bus_message_append_array_iovec()</function>
    function appends an array of a trivial type to the message
    <parameter>m</parameter>, similar to
    <function>sd_bus_message_append_array()</function>. Contents of
    the I/O vector array <parameter>iov</parameter> are used as the
    contents of the array. The total size of
    <parameter>iov</parameter> payload (the sum of
    <structfield>iov_len</structfield> fields) must be a multiple of
    the size of the type <parameter>type</parameter>. The
    <parameter>iov</parameter> argument must point to
    <parameter>n</parameter> I/O vector structures. Each structure may
    have the <structname>iov_base</structname> field set, in which
    case the memory pointed to will be copied into the message, or
    unset (set to zero), in which case a block of zeros of length
    <structname>iov_len</structname> bytes will be inserted. The
    memory pointed at by <parameter>iov</parameter> may be changed
    after this call.</para>

    <para>The <function>sd_bus_message_append_array_space()</function>
    function appends space for an array of a trivial type to message
    <parameter>m</parameter>.  It behaves the same as
    <function>sd_bus_message_append_array()</function>, but instead of
    copying items to the message, it returns a pointer to the
    destination area to the caller in pointer
    <parameter>p</parameter>. The caller should subsequently write the
    array contents to this memory. Modifications to the memory
    pointed to should only occur until the next operation on the bus
    message is invoked. Most importantly, the memory should not be
    altered anymore when another field has been added to the message
    or the message has been sealed.</para>
  </refsect1>

  <refsect1>
    <title>Return Value</title>

    <para>On success, these calls return 0 or a positive integer. On
    failure, they return a negative errno-style error code.</para>
  </refsect1>

  <xi:include href="sd_bus_message_append_basic.xml" xpointer="errors" />

  <xi:include href="libelogind-pkgconfig.xml" />

  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>systemd</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd-bus</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_message_append</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_message_append_basic</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry project='man-pages'><refentrytitle>memfd_create</refentrytitle><manvolnum>2</manvolnum></citerefentry>,
      <ulink url="http://dbus.freedesktop.org/doc/dbus-specification.html">The D-Bus specification</ulink>
    </para>
  </refsect1>

</refentry>
