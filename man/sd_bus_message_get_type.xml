<?xml version='1.0'?> <!--*-nxml-*-->
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<!-- SPDX-License-Identifier: LGPL-2.1-or-later -->

<refentry id="sd_bus_message_get_type" xmlns:xi="http://www.w3.org/2001/XInclude">

  <refentryinfo>
    <title>sd_bus_message_get_type</title>
    <productname>elogind</productname>
  </refentryinfo>

  <refmeta>
    <refentrytitle>sd_bus_message_get_type</refentrytitle>
    <manvolnum>3</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>sd_bus_message_get_type</refname>
    <refname>sd_bus_message_get_error</refname>
    <refname>sd_bus_message_get_errno</refname>
    <refname>sd_bus_message_get_creds</refname>
    <refname>sd_bus_message_is_signal</refname>
    <refname>sd_bus_message_is_method_call</refname>
    <refname>sd_bus_message_is_method_error</refname>

    <refpurpose>Query bus message addressing/credentials metadata</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcsynopsisinfo>#include &lt;elogind/sd-bus.h&gt;</funcsynopsisinfo>

      <funcprototype>
        <funcdef>int <function>sd_bus_message_get_type</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>uint8_t *<parameter>type</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sd_bus_error* <function>sd_bus_message_get_error</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int <function>sd_bus_message_get_errno</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>sd_bus_creds* <function>sd_bus_message_get_creds</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int <function>sd_bus_message_is_signal</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>const char *<parameter>interface</parameter></paramdef>
        <paramdef>const char *<parameter>member</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int <function>sd_bus_message_is_method_call</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>const char *<parameter>interface</parameter></paramdef>
        <paramdef>const char *<parameter>member</parameter></paramdef>
      </funcprototype>

      <funcprototype>
        <funcdef>int <function>sd_bus_message_is_method_error</function></funcdef>
        <paramdef>sd_bus_message *<parameter>m</parameter></paramdef>
        <paramdef>const char *<parameter>name</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>

  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>

    <para><function>sd_bus_message_get_type()</function> returns the type of a message in the output
    parameter <parameter>type</parameter>, one of <constant>SD_BUS_MESSAGE_METHOD_CALL</constant>,
    <constant>SD_BUS_MESSAGE_METHOD_RETURN</constant>, <constant>SD_BUS_MESSAGE_METHOD_ERROR</constant>,
    <constant>SD_BUS_MESSAGE_SIGNAL</constant>. This type is either specified as a parameter when the message
    is created using
    <citerefentry><refentrytitle>sd_bus_message_new</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
    or is set automatically when the message is created using
    <citerefentry><refentrytitle>sd_bus_message_new_signal</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
    <citerefentry><refentrytitle>sd_bus_message_new_method_call</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
    <citerefentry><refentrytitle>sd_bus_message_new_method_error</refentrytitle><manvolnum>3</manvolnum></citerefentry>
    and similar functions.</para>

    <para><function>sd_bus_message_get_error()</function> returns the error stored in the message
    <parameter>m</parameter>, if there is any. Otherwise, it returns <constant>NULL</constant>.
    <function>sd_bus_message_get_errno()</function> returns the error stored in the message
    <parameter>m</parameter> as a positive errno-style value, if there is any. Otherwise, it returns zero.
    Errors are mapped to errno values according to the default and any additional registered error mappings.
    See <citerefentry><refentrytitle>sd-bus-errors</refentrytitle><manvolnum>3</manvolnum></citerefentry> and
    <citerefentry><refentrytitle>sd_bus_error_add_map</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
    </para>

    <para><function>sd_bus_message_get_creds()</function> returns the message credentials attached to the
    message <parameter>m</parameter>. If no credentials are attached to the message, it returns
    <constant>NULL</constant>. Ownership of the credentials instance is not transferred to the caller and
    hence should not be freed.</para>

    <para><function>sd_bus_message_is_signal()</function> checks if message <parameter>m</parameter> is a
    signal message. If <parameter>interface</parameter> is non-null, it also checks if the message has the
    same interface set. If <parameter>member</parameter> is non-null, it also checks if the message has the
    same member set. Also see
    <citerefentry><refentrytitle>sd_bus_message_new_signal</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
    It returns true when all checks pass.</para>

    <para><function>sd_bus_message_is_method_call()</function> checks if message <parameter>m</parameter>
    is a method call message. If <parameter>interface</parameter> is non-null, it also checks if the message
    has the same interface set. If <parameter>member</parameter> is non-null, it also checks if the message
    has the same member set. Also see
    <citerefentry><refentrytitle>sd_bus_message_new_method_call</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
    It returns true when all checks pass.</para>

    <para><function>sd_bus_message_is_method_error()</function> checks if message <parameter>m</parameter>
    is an error reply message. If <parameter>name</parameter> is non-null, it also checks if the message has
    the same error identifier set. Also see
    <citerefentry><refentrytitle>sd_bus_message_new_method_error</refentrytitle><manvolnum>3</manvolnum></citerefentry>.
    It returns true when all checks pass.</para>
  </refsect1>

  <refsect1>
    <title>Return Value</title>

    <para>On success, these functions (except <function>sd_bus_message_get_error()</function> and
    <function>sd_bus_message_get_creds()</function>) return a non-negative integer. On failure, they return a
    negative errno-style error code. <function>sd_bus_message_get_errno()</function> always returns a
    non-negative integer, even on failure.</para>

    <refsect2>
      <title>Errors</title>

      <para>Returned errors may indicate the following problems:</para>

      <variablelist>
        <varlistentry>
          <term><constant>-EINVAL</constant></term>

          <listitem><para>The message parameter <parameter>m</parameter> or an output parameter is
          <constant>NULL</constant>.</para></listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>

  <xi:include href="libelogind-pkgconfig.xml" />

  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>elogind</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd-bus</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_message_new</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_message_set_destination</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd-bus-errors</refentrytitle><manvolnum>3</manvolnum></citerefentry>,
      <citerefentry><refentrytitle>sd_bus_error_add_map</refentrytitle><manvolnum>3</manvolnum></citerefentry>
    </para>
  </refsect1>

</refentry>
