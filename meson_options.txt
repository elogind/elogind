# -*- mode: meson -*-
# SPDX-License-Identifier: LGPL-2.1-or-later

option('version-tag', type : 'string',
       description : 'override the git version string')
option('shared-lib-tag', type : 'string',
       description : 'override the private shared library version tag (defaults to project version)')

option('mode', type : 'combo', choices : ['developer', 'release'],
       description : 'autoenable features suitable for elogind development/release builds')

option('split-usr', type : 'combo', choices : ['auto', 'true', 'false'],
       description : '''/bin, /sbin aren't symlinks into /usr''')
option('split-bin', type : 'combo', choices : ['auto', 'true', 'false'],
       description : '''sbin is not a symlink to bin''')
option('rootlibdir', type : 'string',
       description : '''[/usr]/lib/x86_64-linux-gnu or such''')
option('rootprefix', type : 'string',
       description : '''override the root prefix [default '/' if split-usr and '/usr' otherwise]''')
#if 0 /// UNNEEDED by elogind
# option('link-udev-shared', type : 'boolean',
#        description : 'link systemd-udev and its helpers to libsystemd-shared.so')
# option('link-systemctl-shared', type: 'boolean',
#        description : 'link systemctl against libsystemd-shared.so')
# option('link-networkd-shared', type: 'boolean',
#        description : 'link systemd-networkd and its helpers to libsystemd-shared.so')
# option('link-timesyncd-shared', type: 'boolean',
#        description : 'link systemd-timesyncd and its helpers to libsystemd-shared.so')
# option('link-journalctl-shared', type: 'boolean',
#        description : 'link journalctl against libsystemd-shared.so')
# option('link-boot-shared', type: 'boolean',
#        description : 'link bootctl and systemd-bless-boot against libsystemd-shared.so')
# option('first-boot-full-preset', type: 'boolean', value: false,
#        description : 'during first boot, do full preset-all (default will be changed to true later)')
#endif // 0

option('static-libelogind', type : 'combo',
       choices : ['false', 'true', 'pic', 'no-pic'],
#if 0 /// UNNEEDED by elogind
#        description : '''install a static library for libsystemd''')
# option('static-libudev', type : 'combo',
#        choices : ['false', 'true', 'pic', 'no-pic'],
#        description : 'install a static library for libudev')
# option('standalone-binaries', type : 'boolean', value : false,
#        description : 'also build standalone versions of supported binaries')
#
# option('sysvinit-path', type : 'string', value : '/etc/init.d',
#        description : 'the directory where the SysV init scripts are located')
# option('sysvrcnd-path', type : 'string', value : '/etc/rc.d',
#        description : 'the base directory for SysV rcN.d directories')
# option('telinit-path', type : 'string', value : '/lib/sysvinit/telinit',
#        description : 'path to telinit')
# option('rc-local', type : 'string',
#        value : '/etc/rc.local')
# option('initrd', type : 'boolean',
#        description : 'install services for use when running systemd in initrd')
# option('compat-mutable-uid-boundaries', type : 'boolean', value : false,
#        description : 'look at uid boundaries in /etc/login.defs for compatibility')
# option('nscd', type : 'boolean',
#        description : 'build support for flushing of the nscd caches')
#
# option('quotaon-path', type : 'string', description : 'path to quotaon')
# option('quotacheck-path', type : 'string', description : 'path to quotacheck')
# option('kmod-path', type : 'string', description : 'path to kmod')
#else // 0
       description : '''install a static library for libelogind''')

# elogind must have a configurable rootlibexecdir
option('rootlibexecdir', type : 'string',
       description : '''override the root libexec directory path''')

# And because elogind depends on external udev, it must be
# configurable as well.
option('udevrulesdir', type : 'string',
       description : '''directory for udev rules files''')

option('udevbindir', type : 'string',
       description : '''directory for udev binary files''')

# We are nice and make the html path configurable
option('htmldir', type : 'string', description : 'path where to install the HTML documentation.')

# We have no systemd-shutdown binary, so we need 'halt', 'reboot' and 'poweroff'
option('halt-path', type : 'string', description : 'path to halt')
option('poweroff-path', type : 'string', description : 'path to poweroff')
option('reboot-path', type : 'string', description : 'path to reboot')
#endif // 0
option('kexec-path', type : 'string', description : 'path to kexec')
#if 0 /// UNNEEDED by elogind
# option('sulogin-path', type : 'string', description : 'path to sulogin')
# option('mount-path', type : 'string', description : 'path to mount')
# option('umount-path', type : 'string', description : 'path to umount')
# option('loadkeys-path', type : 'string', description : 'path to loadkeys')
# option('setfont-path', type : 'string', description : 'path to setfont')
#endif // 0
option('nologin-path', type : 'string', description : 'path to nologin')

#if 0 /// UNNEEDED by elogind
# option('debug-shell', type : 'string', value : '/bin/sh',
#        description : 'path to debug shell binary')
# option('debug-tty', type : 'string', value : '/dev/tty9',
#        description : 'specify the tty device for debug shell')
# option('debug-extra', type : 'array', choices : ['hashmap', 'mmap-cache', 'siphash'], value : [],
#        description : 'enable extra debugging')
#else // 0
option('debug-extra', type : 'array', choices : ['elogind', 'hashmap', 'mmap-cache', 'siphash'], value : [],
       description : 'enable extra debugging')
#endif // 0
#if 0 /// UNNEEDED by elogind
# option('memory-accounting-default', type : 'boolean',
#        description : 'enable MemoryAccounting= by default')
# option('bump-proc-sys-fs-file-max', type : 'boolean',
#        description : 'bump /proc/sys/fs/file-max to LONG_MAX')
# option('bump-proc-sys-fs-nr-open', type : 'boolean',
#        description : 'bump /proc/sys/fs/nr_open to INT_MAX')
#endif // 0
option('valgrind', type : 'boolean', value : false,
       description : 'do extra operations to avoid valgrind warnings')
option('log-trace', type : 'boolean', value : false,
       description : 'enable low level debug logging')
option('user-path', type : 'string',
       description : '$PATH to use for user sessions')

option('utmp', type : 'boolean',
       description : 'support for utmp/wtmp log handling')
#if 0 /// UNNEEDED by elogind
# option('hibernate', type : 'boolean',
#        description : 'support for hibernation')
# option('ldconfig', type : 'boolean',
#        description : 'support for dynamic linker cache creation')
# option('resolve', type : 'boolean',
#        description : 'systemd-resolved stack')
# option('efi', type : 'boolean',
#        description : 'enable systemd-boot and bootctl')
# option('tpm', type : 'boolean',
#        description : 'TPM should be used to log events and extend the registers')
# option('environment-d', type : 'boolean',
#        description : 'support for environment.d')
# option('binfmt', type : 'boolean',
#        description : 'support for custom binary formats')
# option('repart', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install the systemd-repart tool')
# option('sysupdate', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install the systemd-sysupdate tool')
# option('coredump', type : 'boolean',
#        description : 'install the coredump handler')
# option('pstore', type : 'boolean',
#        description : 'install the pstore archival tool')
# option('oomd', type : 'boolean',
#        description : 'install the userspace oom killer')
# option('logind', type : 'boolean',
#        description : 'install the systemd-logind stack')
# option('hostnamed', type : 'boolean',
#        description : 'install the systemd-hostnamed stack')
# option('localed', type : 'boolean',
#        description : 'install the systemd-localed stack')
# option('machined', type : 'boolean',
#        description : 'install the systemd-machined stack')
# option('portabled', type : 'boolean',
#        description : 'install the systemd-portabled stack')
# option('sysext', type : 'boolean',
#        description : 'install the systemd-sysext stack')
# option('userdb', type : 'boolean',
#        description : 'install the systemd-userdbd stack')
# option('homed', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install the systemd-homed stack')
# option('networkd', type : 'boolean',
#        description : 'install the systemd-networkd stack')
# option('timedated', type : 'boolean',
#        description : 'install the systemd-timedated daemon')
# option('timesyncd', type : 'boolean',
#        description : 'install the systemd-timesyncd daemon')
# option('remote', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'support for "journal over the network"')
# option('create-log-dirs', type : 'boolean',
#        description : 'create /var/log/journal{,/remote}')
# option('nss-myhostname', type : 'boolean',
#        description : 'install nss-myhostname module')
# option('nss-mymachines', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install nss-mymachines module')
# option('nss-resolve', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install nss-resolve module')
# option('nss-systemd', type : 'boolean',
#        description : 'install nss-systemd module')
# option('firstboot', type : 'boolean',
#        description : 'support for firstboot mechanism')
# option('randomseed', type : 'boolean',
#        description : 'support for restoring random seed')
# option('backlight', type : 'boolean',
#        description : 'support for restoring backlight state')
# option('vconsole', type : 'boolean',
#        description : 'support for vconsole configuration')
# option('quotacheck', type : 'boolean',
#        description : 'support for the quotacheck tools')
# option('sysusers', type : 'boolean',
#        description : 'support for the sysusers configuration')
# option('tmpfiles', type : 'boolean',
#        description : 'support for tmpfiles.d')
# option('importd', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'install the systemd-importd daemon')
# option('hwdb', type : 'boolean',
#        description : 'support for the hardware database')
# option('rfkill', type : 'boolean',
#        description : 'support for the rfkill tools')
# option('xdg-autostart', type : 'boolean',
#        description : 'install the xdg-autostart-generator and unit')
#else // 0
option('efi', type : 'boolean',
       description : 'enable EFI support')
#endif // 0
option('man', type : 'combo', choices : ['auto', 'true', 'false'],
       value : 'false',
       description : 'build and install man pages')
option('html', type : 'combo', choices : ['auto', 'true', 'false'],
       value : 'false',
       description : 'build and install html pages')
option('translations', type : 'boolean', value : true,
       description : 'build and install translations')

#if 0 /// UNNEEDED by elogind
# option('certificate-root', type : 'string', value : '/etc/ssl',
#        description : 'the prefix for TLS certificates')
#endif // 0
option('dbuspolicydir', type : 'string',
       description : 'D-Bus policy directory')
option('dbussessionservicedir', type : 'string',
       description : 'D-Bus session service directory')
option('dbussystemservicedir', type : 'string',
       description : 'D-Bus system service directory')
option('dbus-interfaces-dir', type : 'string',
       description : 'export D-Bus introspection XML as standalone files')
#if 0 /// UNNEEDED by elogind
# option('pkgconfigdatadir', type : 'string', value : '',
#        description : 'directory for arch-independent pkg-config files')
#endif // 0
option('pkgconfiglibdir', type : 'string', value : '',
       description : 'directory for standard pkg-config files')
#if 0 /// UNNEEDED by elogind
# option('xinitrcdir', type : 'string', value : '',
#        description : 'directory for xinitrc files')
# option('rpmmacrosdir', type : 'string', value : 'lib/rpm/macros.d',
#        description : 'directory for rpm macros ["no" disables]')
#endif // 0
option('update-helper-user-timeout', type : 'string', value : '15s',
       description : 'how long to wait for user manager operations')
option('pamlibdir', type : 'string',
       description : 'directory for PAM modules')
option('pamconfdir', type : 'string',
       description : 'directory for PAM configuration ["no" disables]')
option('libcryptsetup-plugins-dir', type : 'string',
       description : 'directory for libcryptsetup plugins')
option('docdir', type : 'string',
       description : 'documentation directory')
option('install-sysconfdir', type : 'combo', choices : ['true', 'no-samples', 'false'], value : 'true',
       description : 'install configuration files and directories to $sysconfdir')

option('fallback-hostname', type : 'string', value : 'localhost',
       description : 'the hostname used if none configured')
option('default-hierarchy', type : 'combo',
       choices : ['legacy', 'hybrid', 'unified'], value : 'unified',
#if 0 /// elogind interprets this a bit different
#        description : 'default cgroup hierarchy')
#else // 0
       description : '''Wanted cgroup hierarchy if elogind has to be a cgroup controller:
                "legacy"  assumes tmpfs mounted on /sys/fs/cgroup and cgroup on its
                                  subfolders.
                "hybrid"  assumes cgroups version 2 mounted on /sys/fs/cgroup/unified.
                                  /sys/fs/cgroup is legacy, then.
                "unified" assumes cgroups version 2 on /sys/fs/cgroup''')
option('cgroup-controller', type : 'string',
       description : 'Name of the cgroup controller to use')
#endif // 0
#if 0 /// UNNEEDED by elogind
# option('extra-net-naming-schemes', type : 'string',
#        description : 'comma-separated list of extra net.naming-scheme= definitions')
# option('default-net-naming-scheme', type : 'string', value : 'latest',
#        description : 'default net.naming-scheme= value')
# option('status-unit-format-default', type : 'combo',
#        choices : ['auto', 'description', 'name', 'combined'],
#        description : 'use unit name or description in messages by default')
# option('time-epoch', type : 'integer', value : 0,
#        description : 'time epoch for time clients')
#endif // 0
option('clock-valid-range-usec-max', type : 'integer', value : 473364000000000, # 15 years
       description : 'maximum value in microseconds for the difference between RTC and epoch, exceeding which is considered an RTC error ["0" disables]')
option('default-user-shell', type : 'string', value : '/bin/bash',
       description : 'default interactive shell')

option('system-alloc-uid-min', type : 'integer', value : 0,
       description : 'minimum system UID used when allocating')
option('system-alloc-gid-min', type : 'integer', value : 0,
       description : 'minimum system GID used when allocating')
option('system-uid-max', type : 'integer', value : 0,
       description : 'maximum system UID')
option('system-gid-max', type : 'integer', value : 0,
       description : 'maximum system GID')
#if 0 /// UNNEEDED by elogind
# option('dynamic-uid-min', type : 'integer', value : 0x0000EF00,
#        description : 'minimum dynamic UID')
# option('dynamic-uid-max', type : 'integer', value : 0x0000FFEF,
#        description : 'maximum dynamic UID')
# option('container-uid-base-min', type : 'integer', value : 0x00080000,
#        description : 'minimum container UID base')
# option('container-uid-base-max', type : 'integer', value : 0x6FFF0000,
#        description : 'maximum container UID base')
#endif // 0
option('adm-group', type : 'boolean',
       description : 'the ACL for adm group should be added')
option('wheel-group', type : 'boolean',
       description : 'the ACL for wheel group should be added')
option('nobody-user', type : 'string',
       description : 'The name of the nobody user (the one with UID 65534)',
       value : 'nobody')
option('nobody-group', type : 'string',
       description : 'The name of the nobody group (the one with GID 65534)',
       value : 'nobody')
#if 0 /// UNNEEDED by elogind
# option('adm-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "adm" group')
# option('audio-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "audio" group')
# option('cdrom-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "cdrom" group')
# option('dialout-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "dialout" group')
# option('disk-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "disk" group')
# option('input-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "input" group')
# option('kmem-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "kmem" group')
# option('kvm-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "kvm" group')
# option('lp-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "lp" group')
# option('render-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "render" group')
# option('sgx-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "sgx" group')
# option('tape-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "tape" group')
# option('tty-gid', type : 'integer', value : 5,
#        description : 'the numeric GID of the "tty" group')
# option('users-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "users" group')
# option('utmp-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "utmp" group')
# option('video-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "video" group')
# option('wheel-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the "wheel" group')
# option('systemd-journal-gid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the systemd-journal group')
# option('systemd-network-uid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the systemd-network user')
# option('systemd-resolve-uid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the systemd-resolve user')
# option('systemd-timesync-uid', type : 'integer', value : 0,
#        description : 'soft-static allocation for the systemd-timesync user')
#endif // 0

option('dev-kvm-mode', type : 'string', value : '0666',
       description : '/dev/kvm access mode')
option('group-render-mode', type : 'string', value : '0666',
       description : 'Access mode for devices owned by render group (e.g. /dev/dri/renderD*, /dev/kfd).')
option('default-kill-user-processes', type : 'boolean',
       description : 'the default value for KillUserProcesses= setting')
#if 0 /// UNNEEDED by elogind
# option('gshadow', type : 'boolean',
#        description : 'support for shadow group')
# option('default-locale', type : 'string', value : 'C.UTF-8',
#        description : 'default locale used when /etc/locale.conf does not exist')
# option('nspawn-locale', type : 'string', value : 'C.UTF-8',
#        description : 'default locale used by systemd-nspawn when executing commands in a container')
# option('localegen-path', type : 'string', value : '',
#        description : 'absolute path to the locale-gen binary in case the system is using locale-gen')
# option('service-watchdog', type : 'string', value : '3min',
#        description : 'default watchdog setting for systemd services')
#
# option('default-dnssec', type : 'combo',
#        description : 'default DNSSEC mode',
#        choices : ['yes', 'allow-downgrade', 'no'],
#        value : 'allow-downgrade')
# option('default-dns-over-tls', type : 'combo',
#        description : 'default DNS-over-TLS mode',
#        choices : ['yes', 'opportunistic', 'no'],
#        value : 'no')
# option('default-mdns', type : 'combo',
#        choices : ['yes', 'resolve', 'no'],
#        description : 'default MulticastDNS mode',
#        value : 'yes')
# option('default-llmnr', type : 'combo',
#        choices : ['yes', 'resolve', 'no'],
#        description : 'default LLMNR mode',
#        value : 'yes')
# option('dns-over-tls', type : 'combo', choices : ['auto', 'gnutls', 'openssl', 'true', 'false'],
#        description : 'DNS-over-TLS support')
# option('dns-servers', type : 'string',
#        description : 'space-separated list of default DNS servers',
#        value : '1.1.1.1#cloudflare-dns.com 8.8.8.8#dns.google 1.0.0.1#cloudflare-dns.com 8.8.4.4#dns.google 2606:4700:4700::1111#cloudflare-dns.com 2001:4860:4860::8888#dns.google 2606:4700:4700::1001#cloudflare-dns.com 2001:4860:4860::8844#dns.google')
# option('ntp-servers', type : 'string',
#        description : 'space-separated list of default NTP servers',
#        value : 'time1.google.com time2.google.com time3.google.com time4.google.com')
# option('support-url', type : 'string',
#        description : 'the support URL to show in catalog entries included in systemd',
#        value : 'https://lists.freedesktop.org/mailman/listinfo/systemd-devel')
# option('www-target', type : 'string',
#        description : 'the address and dir to upload docs too',
#        value : 'www.freedesktop.org:/srv/www.freedesktop.org/www/software/systemd')
#
# option('seccomp', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'SECCOMP support')
#endif // 0
option('selinux', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'SELinux support')
#if 0 /// UNNEEDED by elogind
# option('apparmor', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'AppArmor support')
#endif // 0
option('smack', type : 'boolean',
       description : 'SMACK support')
#if 0 /// UNNEEDED by elogind
# option('smack-run-label', type : 'string',
#        description : 'run systemd --system itself with a specific SMACK label')
#endif // 0
option('smack-default-process-label', type : 'string',
       description : 'default SMACK label for executed processes')
option('polkit', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'polkit support')
option('ima', type : 'boolean',
       description : 'IMA support')

option('acl', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'libacl support')
option('audit', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'libaudit support')
#if 0 /// UNNEEDED by elogind
# option('blkid', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libblkid support')
# option('fdisk', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libfdisk support')
# option('kmod', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'support for loadable modules')
#endif // 0
option('pam', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'PAM support')
#if 0 /// UNNEEDED by elogind
# option('pwquality', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libpwquality support')
# option('microhttpd', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libµhttpd support')
# option('libcryptsetup', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libcryptsetup support')
# option('libcryptsetup-plugins', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libcryptsetup LUKS2 external token handlers support (plugins)')
# option('libcurl', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libcurl support')
# option('idn', type : 'boolean',
#        description : 'use IDN when printing hostnames')
# option('libidn2', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libidn2 support')
# option('libidn', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libidn support')
# option('libiptc', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libiptc support')
# option('qrencode', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libqrencode support')
# option('gcrypt', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'gcrypt support')
# option('gnutls', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'gnutls support')
# option('openssl', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'openssl support')
# option('cryptolib', type : 'combo', choices : ['auto', 'openssl', 'gcrypt'],
#        description : 'whether to use openssl or gcrypt where both are supported')
# option('p11kit', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'p11kit support')
# option('libfido2', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'FIDO2 support')
# option('tpm2', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'TPM2 support')
# option('elfutils', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'elfutils support')
# option('zlib', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'zlib compression support')
# option('bzip2', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'bzip2 compression support')
# option('xz', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'xz compression support')
# option('lz4', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'lz4 compression support')
# option('zstd', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'zstd compression support')
# option('default-compression', type : 'combo', choices : ['auto', 'zstd', 'lz4', 'xz'], value: 'auto',
#        description : 'default compression algorithm')
# option('xkbcommon', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'xkbcommon keymap support')
# option('pcre2', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'regexp matching support using pcre2')
# option('glib', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'libglib support (for tests only)')
#endif // 0
option('dbus', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'libdbus support (for tests only)')

#if 0 /// UNNEEDED BY elogind
# option('gnu-efi', type : 'combo', choices : ['auto', 'true', 'false'],
#        description : 'gnu-efi support for sd-boot')
# option('efi-cflags', type : 'array',
#        description : 'additional flags for EFI compiler')
# # Note that LLD does not support PE/COFF relocations
# # https://lists.llvm.org/pipermail/llvm-dev/2021-March/149234.html
# option('efi-ld', type : 'combo', choices : ['auto', 'bfd', 'gold'],
#        description : 'the linker to use for EFI modules')
# option('efi-libdir', type : 'string',
#        description : 'path to the EFI lib directory')
# option('efi-includedir', type : 'string', value : '/usr/include/efi',
#        description : 'path to the EFI header directory')
#endif // 0
option('efi-tpm-pcr-compat', type : 'boolean', value : false,
       description : 'Measure kernel command line also into TPM PCR 8 (in addition to 12)')
option('sbat-distro', type : 'string', value : 'auto',
       description : 'SBAT distribution ID, e.g. fedora, or auto for autodetection')
option('sbat-distro-generation', type : 'integer', value : 1,
       description : 'SBAT distribution generation')
option('sbat-distro-summary', type : 'string',
       description : 'SBAT distribution summary, e.g. Fedora')
option('sbat-distro-pkgname', type : 'string',
       description : 'SBAT distribution package name, e.g. elogind')
option('sbat-distro-version', type : 'string',
       description : 'SBAT distribution package version, e.g. 248-7.fc34')
option('sbat-distro-url', type : 'string',
       description : 'SBAT distribution URL, e.g. https://src.fedoraproject.org/rpms/elogind')
option('efi-color-normal', type : 'string', value : 'lightgray,black',
       description : 'general boot loader color in "foreground,background" form, see constants from eficon.h')
option('efi-color-entry', type : 'string', value : 'lightgray,black',
       description : 'boot loader color for entries')
option('efi-color-highlight', type : 'string', value : 'black,lightgray',
       description : 'boot loader color for selected entries')
option('efi-color-edit', type : 'string', value : 'black,lightgray',
       description : 'boot loader color for option line edit')

option('bashcompletiondir', type : 'string',
       description : 'directory for bash completion scripts ["no" disables]')
option('zshcompletiondir', type : 'string',
       description : 'directory for zsh completion scripts ["no" disables]')

option('tests', type : 'combo', choices : ['true', 'unsafe', 'false'],
       description : 'enable extra tests with =unsafe')
option('slow-tests', type : 'boolean', value : false,
       description : 'run the slow tests by default')
option('fuzz-tests', type : 'boolean', value : false,
       description : 'run the fuzzer regression tests by default (with sanitizers)')
option('install-tests', type : 'boolean', value : false,
       description : 'install test executables')
option('log-message-verification', type : 'combo', choices : ['auto', 'true', 'false'],
       description : 'do fake printf() calls to verify format strings')

option('ok-color', type : 'combo',
       choices : ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan',
                  'white', 'highlight-black', 'highlight-red', 'highlight-green',
                  'highlight-yellow', 'highlight-blue', 'highlight-magenta',
                  'highlight-cyan', 'highlight-white'],
       value : 'green',
       description: 'color of the "OK" status message')
option('urlify', type : 'boolean', value : true,
       description : 'enable pager Hyperlink ANSI sequence support')
#if 0 /// fexecve is nowhere used within elogind
# option('fexecve', type : 'boolean', value : false,
#        description : 'use fexecve() to spawn children')
#endif // 0

#if 0 /// fuzz regression tests are not supported by elogind, as is kernel-install or systemd-analyze
# option('oss-fuzz', type : 'boolean', value : false,
#        description : 'build against oss-fuzz')
# option('llvm-fuzz', type : 'boolean', value : false,
#        description : 'build against LLVM libFuzzer')
# option('kernel-install', type: 'boolean', value: true,
#        description : 'install kernel-install and associated files')
# option('analyze', type: 'boolean', value: true,
#        description : 'install systemd-analyze')
#endif // 0

#if 0 /// BPF is nowhere used or usable within elogind
# option('bpf-compiler', type : 'combo', choices : ['clang', 'gcc'],
#     description: 'compiler used to build BPF programs, note: gcc is experimental')
# option('bpf-framework', type : 'combo', choices : ['auto', 'true', 'false'],
#     description: 'build BPF programs from source code in restricted C')
#endif // 0

option('skip-deps', type : 'boolean', value : false,
       description : 'skip optional dependencies')
